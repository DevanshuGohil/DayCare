/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import static Controller.DayCareController.studentRatioRules;
import Models.ClassRoom;
import Models.School;
import Models.Student;
import Models.Teacher;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * 
 */
public class SummaryPage extends javax.swing.JPanel {

    /**
     * Creates new form SummaryPage
     */
    School instance;
    public SummaryPage() {
        initComponents();
        instance = School.getInstance();
        Map<String, Integer> studentDistribution = this.getAgeDistribution(instance.getStudentlist());
        Map<String, Integer> groupDistribution = this.getGroupsDistribution(studentDistribution);
        this.populateTable(groupDistribution);
        Vector<String> classList = new Vector<>(); 
        for (ClassRoom tk : this.instance.getClassRooms()){
            classList.add(String.valueOf(tk.getName()));
        }
        jComboClassRoom.setModel(new DefaultComboBoxModel(classList));
        
        Vector<String> teacherList = new Vector<>(); 
        for (Teacher tk : this.instance.teacherlist){
            teacherList.add(String.valueOf(tk.getId()));
        }
        jComboTeacher.setModel(new DefaultComboBoxModel(teacherList));
    }

    public Map<String, Integer> getAgeDistribution(List<Student> studentList){
        Map<String, Integer> studentDistribution = new HashMap<String, Integer>();
        for(Student pk : studentList){
            if (studentDistribution.containsKey(pk.getAgeGroup())) {

                studentDistribution.put(pk.getAgeGroup(),
                        studentDistribution.get(pk.getAgeGroup()) + 1);
            }
            else {
 
                studentDistribution.put(pk.getAgeGroup(), 1);
            }
            
        }
        return studentDistribution;
    }
    
    public Map<String, Integer> getGroupsDistribution(Map<String, Integer> studentDistribution){
        Map<String, Integer> groupDistribution = new HashMap<String, Integer>();
        
        for (Map.Entry entry : studentDistribution.entrySet()) {
            int maxSize = studentRatioRules.get(entry.getKey());
            System.out.println("Processing for Key : " + entry.getKey());
                groupDistribution.put(entry.getKey().toString(),
                     1 + (Integer.parseInt(entry.getValue().toString())/ maxSize));   
        }
        return groupDistribution;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSummary = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboClassRoom = new javax.swing.JComboBox<>();
        jComboTeacher = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTblPendingStudents = new javax.swing.JTable();
        jbtnVaccine = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblSummary.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Age(Months)", "Number of Groups"
            }
        ));
        jScrollPane1.setViewportView(tblSummary);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("CLASSROOM SUMMARY");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("IMMUNIZATION STATUS");

        jComboClassRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboTeacher.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setText("ClassRoom : ");

        jLabel4.setText("Teacher :");

        jTblPendingStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Student Name", "Student Id", "MMR Vaccine1st Dose", "MMR Vaccine 2nd Dose", "Varicella Vaccine 1st Dose", "Varicella Vaccine 2nd Dose"
            }
        ));
        jScrollPane2.setViewportView(jTblPendingStudents);

        jbtnVaccine.setText("View");
        jbtnVaccine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnVaccineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(37, 37, 37)
                                .addComponent(jComboClassRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jComboTeacher, 0, 518, Short.MAX_VALUE)
                                .addGap(35, 35, 35)
                                .addComponent(jbtnVaccine, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 680, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel2)
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboClassRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jComboTeacher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jbtnVaccine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnVaccineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnVaccineActionPerformed
       // TODO add your handling code here:
        List<ClassRoom> classroomList = this.instance.getClassRooms();
        List<Teacher> teacherList = this.instance.getTeacherlist();
        System.out.println("Inside Button Click");
        for(ClassRoom cl : classroomList){
            if(cl.getName().equals(jComboClassRoom.getSelectedItem().toString())){
                System.out.println("Inside Match of classname");
                String teacherId = jComboTeacher.getSelectedItem().toString();
                for(Teacher tk : teacherList){
                    if(tk.getId() == Integer.parseInt(teacherId)){
                        this.populateABCTable(cl.teacherStudentGroup.get(tk));
                    }
                }
                
            }
        }
    }//GEN-LAST:event_jbtnVaccineActionPerformed

    public void populateTable(Map<String, Integer> groupDistribution){
        DefaultTableModel dtm = (DefaultTableModel) tblSummary.getModel();
        dtm.setRowCount(0);
        for (Map.Entry entry : groupDistribution.entrySet()) {
            Object [] row = new Object[2];
            row[0] = entry.getKey().toString();
            row[1] = entry.getValue().toString();
            dtm.addRow(row);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboClassRoom;
    private javax.swing.JComboBox<String> jComboTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTblPendingStudents;
    private javax.swing.JButton jbtnVaccine;
    private javax.swing.JTable tblSummary;
    // End of variables declaration//GEN-END:variables

    private void populateABCTable(List<Student> stdList) {
    DefaultTableModel dtm = (DefaultTableModel) jTblPendingStudents.getModel();
        dtm.setRowCount(0);
        if(stdList != null){
            for(Student pk : stdList){
            String varicella1Status = "Done";
            if(pk.getVaricella1stDose() == null){
                varicella1Status = "Pending";
            }
            String varicella2Status = "Done";
            if(pk.getVaricella2ndDose() == null){
                varicella2Status = "Pending";
            }
            String mmrVaccine1Status = "Done";
            if(pk.getMmrVaccine1stDose()== null){
                mmrVaccine1Status = "Pending";
            }
            
            String mmrVaccine2Status = "Done";
            if(pk.getMmrVaccine2ndDose()== null){
                mmrVaccine2Status = "Pending";
            }
            if(varicella1Status == "Pending" || varicella2Status == "Pending" ||
                   mmrVaccine2Status == "Pending" || mmrVaccine1Status == "Pending" ){
                
                Object [] row = new Object[6];
                row[0] = pk;
                row[1] = pk.getId();
                row[2] = mmrVaccine1Status;
                row[3] = mmrVaccine2Status;
                row[4] = varicella1Status;
                row[5] = varicella2Status;
                dtm.addRow(row);
            }
            
            }
        }
    }
}
